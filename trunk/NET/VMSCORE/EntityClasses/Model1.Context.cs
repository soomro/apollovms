//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace VMSCORE.EntityClasses
{
    public partial class EntityModelContainer : ObjectContext
    {
        public const string ConnectionString = "name=EntityModelContainer";
        public const string ContainerName = "EntityModelContainer";
    
        #region Constructors
    
        public EntityModelContainer()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public EntityModelContainer(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public EntityModelContainer(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // Creating proxies requires the use of the ProxyDataContractResolver and
            // may allow lazy loading which can expand the loaded graph during serialization.
            ContextOptions.ProxyCreationEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
    
        #region ObjectSet Properties
    
        public ObjectSet<Crisis> Crises
        {
            get { return _crises  ?? (_crises = CreateObjectSet<Crisis>("Crises")); }
        }
        private ObjectSet<Crisis> _crises;
    
        public ObjectSet<Alert> Alerts
        {
            get { return _alerts  ?? (_alerts = CreateObjectSet<Alert>("Alerts")); }
        }
        private ObjectSet<Alert> _alerts;
    
        public ObjectSet<Incident> Incidents
        {
            get { return _incidents  ?? (_incidents = CreateObjectSet<Incident>("Incidents")); }
        }
        private ObjectSet<Incident> _incidents;
    
        public ObjectSet<IncidentReport> IncidentReports
        {
            get { return _incidentReports  ?? (_incidentReports = CreateObjectSet<IncidentReport>("IncidentReports")); }
        }
        private ObjectSet<IncidentReport> _incidentReports;
    
        public ObjectSet<ProgressReport> ProgressReports
        {
            get { return _progressReports  ?? (_progressReports = CreateObjectSet<ProgressReport>("ProgressReports")); }
        }
        private ObjectSet<ProgressReport> _progressReports;
    
        public ObjectSet<Manager> Managers
        {
            get { return _managers  ?? (_managers = CreateObjectSet<Manager>("Managers")); }
        }
        private ObjectSet<Manager> _managers;
    
        public ObjectSet<Address> Addresses
        {
            get { return _addresses  ?? (_addresses = CreateObjectSet<Address>("Addresses")); }
        }
        private ObjectSet<Address> _addresses;
    
        public ObjectSet<StuffItem> StuffItems
        {
            get { return _stuffItems  ?? (_stuffItems = CreateObjectSet<StuffItem>("StuffItems")); }
        }
        private ObjectSet<StuffItem> _stuffItems;
    
        public ObjectSet<Volunteer> Volunteers
        {
            get { return _volunteers  ?? (_volunteers = CreateObjectSet<Volunteer>("Volunteers")); }
        }
        private ObjectSet<Volunteer> _volunteers;
    
        public ObjectSet<Request> Requests
        {
            get { return _requests  ?? (_requests = CreateObjectSet<Request>("Requests")); }
        }
        private ObjectSet<Request> _requests;
    
        public ObjectSet<NeedItem> NeedItems
        {
            get { return _needItems  ?? (_needItems = CreateObjectSet<NeedItem>("NeedItems")); }
        }
        private ObjectSet<NeedItem> _needItems;
    
        public ObjectSet<RequestResponse> RequestResponses
        {
            get { return _requestResponses  ?? (_requestResponses = CreateObjectSet<RequestResponse>("RequestResponses")); }
        }
        private ObjectSet<RequestResponse> _requestResponses;

        #endregion
    }
}
